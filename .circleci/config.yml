version: 2.1

orbs:
  win: circleci/windows@2.4.0
  prodsec: snyk/prodsec-orb@1

defaults: &defaults
  parameters:
    maven_version:
      type: string
      default: ''
    jdk_version:
      type: string
      default: '8'
    node_version:
      type: string
      default: '20.19.1'
  working_directory: ~/snyk-mvn-plugin

windows_defaults: &windows_defaults
  environment:
    npm_config_loglevel: silent
  executor:
    name: win/default

osx_defaults: &osx_defaults
  macos:
    xcode: 16.4.0

test_matrix_unix: &test_matrix_unix
  jdk_version: ['8.0.342-amzn', '17.0.4.1.fx-librca', '21.0.8.fx-librca']
  maven_version: ['3.3.9', '3.6.3', '3.9.11']
  node_version: ['20.19.1']

test_matrix_win: &test_matrix_win
  jdk_version: ['8', '17', '21']
  maven_version: ['3.3.9.2', '3.6.3', '3.9.11']
  node_version: ['20.19.1']

test_matrix_os: &test_matrix_osx
  jdk_version: ['8.0.342-amzn', '17.0.4.1.fx-librca', '21.0.8.fx-librca']
  maven_version: ['3.3.9', '3.6.3', '3.9.11']
  node_version: ['20.19.1']

# Maven 4 matrices (requires Java 17+)
test_matrix_maven4_unix: &test_matrix_maven4_unix
  jdk_version: ['17.0.4.1.fx-librca', '21.0.8.fx-librca']
  maven_version: ['4.0.0-rc-4']
  node_version: ['20.19.1']

commands:
  install_deps:
    description: Install dependencies
    steps:
      - run:
          name: Install dependencies
          command: npm install

  install_node_npm:
    description: Install correct Node version
    parameters:
      node_version:
        type: string
        default: ''
    steps:
      - run:
          name: Install correct version of Node
          command: nvm install << parameters.node_version >>
      - run:
          name: Use correct version of Node
          command: nvm use << parameters.node_version >>

  show_node_version:
    description: Log Node and npm version
    steps:
      - run:
          name: Node version
          command: node --version
      - run:
          name: NPM version
          command: npm --version

  install_sdkman:
    description: Install SDKMAN
    steps:
      - run:
          name: Installing SDKMAN
          command: curl -s "https://get.sdkman.io?rcupdate=false" | bash
      - run:
          name: Sourcing SDKMAN
          command: |
            echo -e '\nsource ~/.sdkman/bin/sdkman-init.sh' >> $BASH_ENV
            source $BASH_ENV

  install_jdk_unix:
    description: Install JDK
    parameters:
      jdk_version:
        type: string
        default: ''
    steps:
      - run:
          name: Installing JDK
          command: sdk install java << parameters.jdk_version >>

  install_jdk_windows:
    description: Install JDK
    parameters:
      jdk_version:
        type: string
        default: ''
    steps:
      - run:
          name: Installing JDK
          command: choco install openjdk

  install_maven_unix:
    description: Install maven
    parameters:
      maven_version:
        type: string
        default: ''
    steps:
      - run:
          name: Installing Maven
          command: sdk install maven << parameters.maven_version >>

  install_maven_windows:
    description: Install maven
    parameters:
      maven_version:
        type: string
        default: ''
    steps:
      - run: choco install maven -y --version=<< parameters.maven_version >>

jobs:
  security-scans:
    resource_class: small
    <<: *defaults
    docker:
      - image: cimg/node:<< parameters.node_version >>
    steps:
      - checkout
      - install_deps
      - show_node_version
      - prodsec/security_scans:
          mode: auto
          release-branch: master
          open-source-additional-arguments: --exclude=tests
          iac-scan: disabled

  lint:
    <<: *defaults
    docker:
      - image: cimg/node:<< parameters.node_version >>
    steps:
      - checkout
      - install_deps
      - show_node_version
      - run:
          name: Run lint
          command: npm run lint

  test-windows:
    <<: *defaults
    <<: *windows_defaults
    steps:
      - run: git config --global core.autocrlf false
      - checkout
      - install_node_npm:
          node_version: << parameters.node_version >>
      - install_jdk_windows
      - install_maven_windows:
          maven_version: << parameters.maven_version >>
      - install_deps
      - show_node_version
      - run:
          name: Run tests
          command: npm run test:maven3

  test-unix:
    <<: *defaults
    docker:
      - image: cimg/node:<< parameters.node_version >>
    environment:
      MAVEN_VERSION: << parameters.maven_version >>
      JDK: << parameters.jdk_version >>
    steps:
      - checkout
      - install_sdkman
      - install_jdk_unix:
          jdk_version: << parameters.jdk_version >>
      - install_maven_unix:
          maven_version: << parameters.maven_version >>
      - install_deps
      - show_node_version
      - run:
          name: Run tests
          command: npm run test:maven3

  test-unix-maven4:
    <<: *defaults
    docker:
      - image: cimg/node:<< parameters.node_version >>
    environment:
      MAVEN_VERSION: << parameters.maven_version >>
      JDK: << parameters.jdk_version >>
    steps:
      - checkout
      - install_sdkman
      - install_jdk_unix:
          jdk_version: << parameters.jdk_version >>
      - install_maven_unix:
          maven_version: << parameters.maven_version >>
      - install_deps
      - show_node_version
      - run:
          name: Run tests
          command: npm run test:maven4

  test-osx:
    <<: *defaults
    <<: *osx_defaults
    environment:
      MAVEN_VERSION: << parameters.maven_version >>
      JDK: << parameters.jdk_version >>
    steps:
      - checkout
      - install_sdkman
      - install_jdk_unix:
          jdk_version: << parameters.jdk_version >>
      - install_maven_unix:
          maven_version: << parameters.maven_version >>
      - install_deps
      - show_node_version
      - run:
          name: Run tests
          command: npm run test:maven3

  test-osx-maven4:
    <<: *defaults
    <<: *osx_defaults
    environment:
      MAVEN_VERSION: << parameters.maven_version >>
      JDK: << parameters.jdk_version >>
    steps:
      - checkout
      - install_sdkman
      - install_jdk_unix:
          jdk_version: << parameters.jdk_version >>
      - install_maven_unix:
          maven_version: << parameters.maven_version >>
      - install_deps
      - show_node_version
      - run:
          name: Run tests
          command: npm run test:maven4

  release:
    <<: *defaults
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - install_deps
      - run:
          name: Publish to GitHub
          command: npx semantic-release

workflows:
  version: 2
  test_and_release:
    jobs:
      - prodsec/secrets-scan:
          name: Scan repository for secrets
          context:
            - snyk-bot-slack
          channel: snyk-vuln-alerts-sca
          filters:
            branches:
              ignore:
                - master

      - security-scans:
          name: Security Scans
          node_version: "lts"
          context:
            - open_source-managed
            - nodejs-install

      - lint:
          name: Lint
          context: nodejs-install
          node_version: 'lts'
          filters:
            branches:
              ignore:
                - master

      # UNIX tests
      - test-unix:
          requires:
            - Lint
            - Security Scans
          matrix:
            alias: test-unix
            parameters:
              <<: *test_matrix_unix
          name: Unix Tests for Maven=<< matrix.maven_version >> JDK=<< matrix.jdk_version >> Node=<< matrix.node_version >>
          context: nodejs-install

      # Windows tests
      - test-windows:
          requires:
            - Lint
            - Security Scans
          matrix:
            alias: test-windows
            parameters:
              <<: *test_matrix_win
          name: Windows Tests for Maven=<< matrix.maven_version >> JDK=<< matrix.jdk_version >> Node=<< matrix.node_version >>
          context: nodejs-install

      # OSX tests
      - test-osx:
          requires:
            - Lint
            - Security Scans
          matrix:
            alias: test-osx
            parameters:
              <<: *test_matrix_osx
          name: OSX Tests for Maven=<< matrix.maven_version >> JDK=<< matrix.jdk_version >> Node=<< matrix.node_version >>
          context: nodejs-install

      # Maven 4 tests (Unix)
      - test-unix-maven4:
          requires:
            - Lint
            - Security Scans
          matrix:
            parameters:
              <<: *test_matrix_maven4_unix
          name: Unix Tests for Maven=<< matrix.maven_version >> JDK=<< matrix.jdk_version >> Node=<< matrix.node_version >>
          context: nodejs-install

      # Maven 4 tests (OSX)
      - test-osx-maven4:
          requires:
            - Lint
            - Security Scans
          matrix:
            parameters:
              <<: *test_matrix_maven4_unix
          name: OSX Tests for Maven=<< matrix.maven_version >> JDK=<< matrix.jdk_version >> Node=<< matrix.node_version >>
          context: nodejs-install

      # Release
      - release:
          name: Release
          context: nodejs-app-release
          node_version: '20.19.1'
          requires:
            - test-osx
            - test-windows
            - test-unix
            - test-unix-maven4
            - test-osx-maven4
          filters:
            branches:
              only:
                - master
